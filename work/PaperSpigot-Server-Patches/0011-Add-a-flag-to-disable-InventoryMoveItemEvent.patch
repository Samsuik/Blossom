From bed48efee0725a313f0e3a5aec1bc1d1ef3d148f Mon Sep 17 00:00:00 2001
From: Techcable <Techcable@outlook.com>
Date: Wed, 3 Feb 2016 11:27:34 -0700
Subject: [PATCH] Add a flag to disable InventoryMoveItemEvent

Even with no listeners, InventoryMoveItemEvent hurts performance.
This patch prevents the event from firing if there are no listeners
Some plugins offer no way to disable their IMIE listeners. (See WorldGuard-3520)
This patch adds a per-world flag to disable InventoryMoveItemEvent for hoppers.

diff --git a/src/main/java/net/minecraft/server/TileEntityHopper.java b/src/main/java/net/minecraft/server/TileEntityHopper.java
index 3fdc15d..4d7f160 100644
--- a/src/main/java/net/minecraft/server/TileEntityHopper.java
+++ b/src/main/java/net/minecraft/server/TileEntityHopper.java
@@ -5,6 +5,7 @@ import java.util.List;
 
 // CraftBukkit start
 import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.craftbukkit.entity.CraftItem;
 import org.bukkit.craftbukkit.inventory.CraftItemStack;
 import org.bukkit.entity.HumanEntity;
 import org.bukkit.event.inventory.InventoryMoveItemEvent;
@@ -267,6 +268,10 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
 
                         // CraftBukkit start - Call event when pushing items into other inventories
                         CraftItemStack oitemstack = CraftItemStack.asCraftMirror(this.splitStack(i, world.spigotConfig.hopperAmount)); // Spigot
+                        // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+                        final org.bukkit.inventory.ItemStack stack;
+                        if (HopperHelper.isFireInventoryMoveItemEvent(this)) {
+                        // TacoSpigot end
 
                         Inventory destinationInventory;
                         // Have to special case large chests as they work oddly
@@ -283,11 +288,18 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                             this.d(world.spigotConfig.hopperTransfer); // Spigot
                             return false;
                         }
-                        int origCount = event.getItem().getAmount(); // Spigot
-                        ItemStack itemstack1 = addItem(iinventory, CraftItemStack.asNMSCopy(event.getItem()), enumdirection);
+                        // TacoSpigot start
+                        stack = event.getItem();
+                        // handle cases where the event is not fired
+                        } else {
+                            stack = oitemstack;
+                        }
+                        int origCount = stack.getAmount(); // Spigot
+                        ItemStack itemstack1 = addItem(iinventory, CraftItemStack.asNMSCopy(stack), enumdirection);
+                        // TacoSpigot end
 
                         if (itemstack1 == null || itemstack1.count == 0) {
-                            if (event.getItem().equals(oitemstack)) {
+                            if (stack.equals(oitemstack)) { // TacoSpigot - event.getItem() -> stack
                                 iinventory.update();
                             } else {
                                 this.setItem(i, itemstack);
@@ -418,6 +430,10 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
             // ItemStack itemstack2 = addItem(ihopper, iinventory.splitStack(i, 1), (EnumDirection) null);
             // CraftBukkit start - Call event on collection of items from inventories into the hopper
             CraftItemStack oitemstack = CraftItemStack.asCraftMirror(iinventory.splitStack(i, ihopper.getWorld().spigotConfig.hopperAmount)); // Spigot
+            // TacoSpigot start - add an option to turn of InventoryMoveItemEvent
+            final org.bukkit.inventory.ItemStack stack;
+            if (HopperHelper.isFireInventoryMoveItemEvent(ihopper)) {
+            // TacoSpigot end
 
             Inventory sourceInventory;
             // Have to special case large chests as they work oddly
@@ -440,11 +456,18 @@ public class TileEntityHopper extends TileEntityContainer implements IHopper, IU
                 }
                 return false;
             }
-            int origCount = event.getItem().getAmount(); // Spigot
-            ItemStack itemstack2 = addItem(ihopper, CraftItemStack.asNMSCopy(event.getItem()), null);
+            // TacoSpigot start
+            stack = event.getItem();
+            // handle cases where the event is not fired
+            } else {
+                stack = oitemstack;
+            }
+            int origCount = stack.getAmount(); // Spigot
+            ItemStack itemstack2 = addItem(ihopper, CraftItemStack.asNMSCopy(stack), null);
+            // TacoSpigot end
 
             if (itemstack2 == null || itemstack2.count == 0) {
-                if (event.getItem().equals(oitemstack)) {
+                if (stack.equals(oitemstack)) {
                     iinventory.update();
                 } else {
                     iinventory.setItem(i, itemstack1);
diff --git a/src/main/java/net/techcable/tacospigot/HopperHelper.java b/src/main/java/net/techcable/tacospigot/HopperHelper.java
index 58b3b72..630a81b 100644
--- a/src/main/java/net/techcable/tacospigot/HopperHelper.java
+++ b/src/main/java/net/techcable/tacospigot/HopperHelper.java
@@ -4,11 +4,14 @@ import net.minecraft.server.Block;
 import net.minecraft.server.BlockChest;
 import net.minecraft.server.BlockPosition;
 import net.minecraft.server.Blocks;
+import net.minecraft.server.IHopper;
 import net.minecraft.server.IInventory;
 import net.minecraft.server.TileEntity;
 import net.minecraft.server.TileEntityHopper;
 import net.minecraft.server.World;
 
+import org.bukkit.event.inventory.InventoryMoveItemEvent;
+
 public class HopperHelper {
 
     public static TileEntityHopper getHopper(World world, BlockPosition pos) {
@@ -32,4 +35,7 @@ public class HopperHelper {
         return null;
     }
 
+    public static boolean isFireInventoryMoveItemEvent(IHopper hopper) {
+        return hopper.getWorld().tacoSpigotConfig.isHopperFireIMIE && InventoryMoveItemEvent.getHandlerList().getRegisteredListeners().length > 0;
+    }
 }
diff --git a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
index c012c8d..c1f297c 100644
--- a/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
+++ b/src/main/java/net/techcable/tacospigot/TacoSpigotWorldConfig.java
@@ -69,6 +69,11 @@ public class TacoSpigotWorldConfig {
         isHopperPushBased = getBoolean("hopper.push-based", true);
     }
 
+    public boolean isHopperFireIMIE;
+    private void isHopperFireIMIE() {
+        isHopperFireIMIE = getBoolean("hopper.fire-InventoryMoveItemEvent", true);
+    }
+
     public boolean optimizeArmorStandMovement;
     private void isArmorStandMoveWithoutGravity() {
         optimizeArmorStandMovement = getBoolean("armor-stand.optimize-movement", false); // Doesn't fully emulate vanilla behavior, see issue #1
-- 
2.8.0

