From b91e2ad56695af33a6b6ea038dd52d77d3cd7d11 Mon Sep 17 00:00:00 2001
From: Shane Freeder <theboyetronic@gmail.com>
Date: Mon, 18 Dec 2017 07:26:56 +0000
Subject: [PATCH] Don't blindly send unlit chunks when lighting updates are
 allowed

Spigot, by default, disables several mechanisms around how chunks are
lit, if ever, which has forced them to always send chunks before vanilla
would consider them ready to send, causing for lots of issues around
lighting glitches.

Shamefully, the amount of work to relight chunks can be detremental
to some servers, meaning that forcibily disabling light updates can
cause major performance issues.

as such, we make a compromise; if this "feature" is disabled, we will
only send chunks which are actually ready to be sent, otherwise, we
will always send chunks.

diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 4344845f2..b017994af 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -65,7 +65,7 @@ public class Chunk {
     // PaperSpigot end
     private boolean done;
     private boolean lit;
-    private boolean p;
+    private boolean p; private boolean isTicked() { return p; }; // Paper - OBFHELPER
     private boolean q;
     private boolean r;
     private long lastSaved;
@@ -1216,7 +1216,11 @@ public class Chunk {
          * We cannot unfortunately do this lighting stage during chunk gen as it appears to put a lot more noticeable load on the server, than when it is done at play time.
          * For now at least we will simply send all chunks, in accordance with pre 1.7 behaviour.
          */
-        return true;
+        // Paper Start
+        // if randomLightUpdates are disabled, we should always return true, otherwise chunks may never send
+        // to the client due to not being lit, otherwise retain standard behavior and only send properly lit chunks.
+        return !this.world.spigotConfig.randomLightUpdates || (this.isTicked() && this.done && this.lit);
+        // Paper End
         // Spigot End
     }
 
-- 
2.50.1

