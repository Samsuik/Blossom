From 3efbd26f4c1361cddb0e1d685eef12ae3b40958d Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Sat, 25 Apr 2020 06:46:35 -0400
Subject: [PATCH] Fix numerous item duplication issues and teleport issues

This notably fixes the newest "Donkey Dupe", but also fixes a lot
of dupe bugs in general around nether portals and entity world transfer

We also fix item duplication generically by anytime we clone an item
to drop it on the ground, destroy the source item.

This avoid an itemstack ever existing twice in the world state pre
clean up stage.

So even if something NEW comes up, it would be impossible to drop the
same item twice because the source was destroyed.

diff --git a/src/main/java/net/minecraft/server/BlockEnderPortal.java b/src/main/java/net/minecraft/server/BlockEnderPortal.java
index 77bee15b1..433d3c3eb 100644
--- a/src/main/java/net/minecraft/server/BlockEnderPortal.java
+++ b/src/main/java/net/minecraft/server/BlockEnderPortal.java
@@ -37,7 +37,7 @@ public class BlockEnderPortal extends BlockContainer {
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, Entity entity) {
-        if (entity.vehicle == null && entity.passenger == null && !world.isClientSide) {
+        if (entity.canChangeDimensions() && !world.isClientSide) { // Paper
             // CraftBukkit start - Entity in portal
             EntityPortalEnterEvent event = new EntityPortalEnterEvent(entity.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), blockposition.getX(), blockposition.getY(), blockposition.getZ()));
             world.getServer().getPluginManager().callEvent(event);
diff --git a/src/main/java/net/minecraft/server/BlockPortal.java b/src/main/java/net/minecraft/server/BlockPortal.java
index 170f77632..7a5fb84f5 100644
--- a/src/main/java/net/minecraft/server/BlockPortal.java
+++ b/src/main/java/net/minecraft/server/BlockPortal.java
@@ -110,7 +110,7 @@ public class BlockPortal extends BlockHalfTransparent {
     }
 
     public void a(World world, BlockPosition blockposition, IBlockData iblockdata, Entity entity) {
-        if (entity.vehicle == null && entity.passenger == null) {
+        if (entity.canChangeDimensions()) { // Paper
             // CraftBukkit start - Entity in portal
             EntityPortalEnterEvent event = new EntityPortalEnterEvent(entity.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), blockposition.getX(), blockposition.getY(), blockposition.getZ()));
             world.getServer().getPluginManager().callEvent(event);
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index c45a57735..8edcaa6ad 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1504,12 +1504,12 @@ public abstract class Entity implements ICommandListener {
         if (itemstack.count != 0 && itemstack.getItem() != null) {
             // CraftBukkit start - Capture drops for death event
             if (this instanceof EntityLiving && ((EntityLiving) this).drops != null) {
-                ((EntityLiving) this).drops.add(org.bukkit.craftbukkit.inventory.CraftItemStack.asBukkitCopy(itemstack));
+                ((EntityLiving) this).drops.add(org.bukkit.craftbukkit.inventory.CraftItemStack.asCraftMirror(itemstack)); // Paper - mirror so we can destroy it later
                 return null;
             }
             // CraftBukkit end
-            EntityItem entityitem = new EntityItem(this.world, this.locX, this.locY + (double) f, this.locZ, itemstack);
-
+            EntityItem entityitem = new EntityItem(this.world, this.locX, this.locY + (double) f, this.locZ, itemstack.cloneItemStack()); // Paper - copy so we can destroy original
+            itemstack.count = 0; // Paper - destroy this item - if this ever leaks due to game bugs, ensure it doesn't dupe
             entityitem.p();
             this.world.addEntity(entityitem);
             return entityitem;
@@ -2000,6 +2000,12 @@ public abstract class Entity implements ICommandListener {
     }
 
     public void c(int i) {
+        // Paper start - fix bad state entities causing dupes
+        if (!this.isAlive() || !this.valid) {
+            MinecraftServer.LOGGER.warn("Illegal Entity Teleport " + this + " to " + i, new Throwable());
+            return;
+        }
+        // Paper end
         if (!this.world.isClientSide && !this.dead) {
             this.world.methodProfiler.a("changeDimension");
             MinecraftServer minecraftserver = MinecraftServer.getServer();
@@ -2059,6 +2065,11 @@ public abstract class Entity implements ICommandListener {
             worldserver1.chunkProviderServer.forceChunkLoad = before;
             // CraftBukkit end
             this.world.methodProfiler.c("reloading");
+            // Paper start - Change lead drop timing to prevent dupe
+            if (this instanceof EntityInsentient) {
+                ((EntityInsentient) this).unleash(true, true); // Paper drop lead
+            }
+            // Paper end
             Entity entity = EntityTypes.createEntityByName(EntityTypes.b(this), worldserver1);
 
             if (entity != null) {
@@ -2075,10 +2086,6 @@ public abstract class Entity implements ICommandListener {
                 // CraftBukkit start - Forward the CraftEntity to the new entity
                 this.getBukkitEntity().setHandle(entity);
                 entity.bukkitEntity = this.getBukkitEntity();
-
-                if (this instanceof EntityInsentient) {
-                    ((EntityInsentient)this).unleash(true, false); // Unleash to prevent duping of leads.
-                }
                 // CraftBukkit end
             }
 
@@ -2090,6 +2097,12 @@ public abstract class Entity implements ICommandListener {
         }
     }
 
+    // Blossom start
+    public boolean canChangeDimensions() {
+        return vehicle == null && passenger == null && isAlive() && valid; // Paper
+    }
+    // Blossom end
+
     public float a(Explosion explosion, World world, BlockPosition blockposition, IBlockData iblockdata) {
         return iblockdata.getBlock().a(this);
     }
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 12257ad24..5ac052c80 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1460,6 +1460,13 @@ public abstract class EntityLiving extends Entity {
         return false;
     }
 
+    // Paper start
+    @Override
+    public boolean canChangeDimensions() {
+        return super.canChangeDimensions() && !this.isSleeping();
+    }
+    // Paper end
+
     public boolean isSleeping() {
         return false;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index db915033b..31d5fca06 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -382,7 +382,8 @@ public class CraftEventFactory {
         for (org.bukkit.inventory.ItemStack stack : event.getDrops()) {
             if (stack == null || stack.getType() == Material.AIR || stack.getAmount() == 0) continue;
 
-            world.dropItemNaturally(entity.getLocation(), stack);
+            world.dropItemNaturally(entity.getLocation(), stack); // Paper - note: dropItem already clones due to this being bukkit -> NMS
+            if (stack instanceof CraftItemStack) stack.setAmount(0); // Paper - destroy this item - if this ever leaks due to game bugs, ensure it doesn't dupe, but don't nuke bukkit stacks of manually added items
         }
 
         return event;
-- 
2.50.1

