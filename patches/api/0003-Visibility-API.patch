From 6c25f68c6e3ca06e3e4e166c446d327785260b77 Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Tue, 15 Sep 2020 19:37:02 +0100
Subject: [PATCH] Visibility API


diff --git a/src/main/java/me/samsuik/blossom/visuals/Visuals.java b/src/main/java/me/samsuik/blossom/visuals/Visuals.java
new file mode 100644
index 00000000..aba2f736
--- /dev/null
+++ b/src/main/java/me/samsuik/blossom/visuals/Visuals.java
@@ -0,0 +1,82 @@
+package me.samsuik.blossom.visuals;
+
+/**
+ * Visual Settings, this is used to keep track of the visuals the player has enabled.
+ */
+public interface Visuals {
+
+    /**
+     * Toggles the provided visual type.
+     *
+     * @param visualType the visual type
+     */
+    void toggle(VisualType visualType);
+
+    /**
+     * Toggles the provided visual type.
+     *
+     * @param visualType the visual type
+     */
+    void set(VisualType visualType, boolean enabled);
+
+    /**
+     * Checks if the provided visual type is enabled.
+     *
+     * @param visualType the visual type
+     * @return if the visual type is enabled.
+     */
+    boolean isEnabled(VisualType visualType);
+
+    /**
+     * Checks if the provided visual type is disabled.
+     *
+     * @param visualType the visual type
+     * @return if the visual type is enabled.
+     */
+    boolean isDisabled(VisualType visualType);
+
+    /**
+     * Checks if the setting of the provided visual type has been modified.
+     *
+     * @param visualType the visual type
+     * @return if the setting of the visual type has been modified.
+     */
+    boolean isToggled(VisualType visualType);
+
+    /**
+     * Checks whether any of the settings have been modified.
+     *
+     * @return if any of the settings have been modified.
+     */
+    boolean isModified();
+
+    enum VisualType {
+        TNT_VISIBILITY("TNT Visibility", true),
+        SAND_VISIBILITY("Sand Visibility", true),
+        FLASHING_TNT("Flashing TNT", true),
+        MINIMAL("Minimal TNT/Sand", false),
+        EXPLOSIONS("Explosion Particles", true),
+        ENCHANTMENT_GLINT("Enchantment Glint", true),
+        SPAWNERS("Spawner Visibility", true),
+        REDSTONE("Redstone Animations", true),
+        PISTONS("Piston Animations", true),
+        LIGHTING("Lighting", true);
+
+        private final boolean defaultValue;
+        private final String friendlyName;
+
+        VisualType(String friendlyName, boolean defaultValue) {
+            this.defaultValue = defaultValue;
+            this.friendlyName = friendlyName;
+        }
+
+        public boolean getDefault() {
+            return defaultValue;
+        }
+
+        public String getFriendlyName() {
+            return friendlyName;
+        }
+    }
+
+}
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 59fa188c..9b9b34a0 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -1203,6 +1203,17 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
     // Paper - Undeprecate
     public void resetTitle();
 
+    // Blossom start - Visual Settings API
+    /**
+     * This returns the visuals of the player.
+     *
+     * <p>Visuals is used to keep track the visual settings of the player.</p>
+     *
+     * @return the player visuals
+     */
+    public me.samsuik.blossom.visuals.Visuals getVisuals();
+    // Blossom end
+
     // TacoSpigot start
     /**
      * Request that the player's client download and switch resource packs.
-- 
2.40.0.windows.1

