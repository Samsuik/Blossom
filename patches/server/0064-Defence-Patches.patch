From c486a7d7a3a3e7ef26d8bdb94fc7c10b42183884 Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Mon, 19 Jun 2023 18:57:22 +0100
Subject: [PATCH] Defence Patches


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index 4e406d2b5..a80873c82 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -387,4 +387,17 @@ public class BlossomConfig {
         optimisedMovement = getBoolean("tnt.optimised-movement", true);
     }
 
+    public static boolean fixSlimeBlockDefence;
+    public static boolean fixCobwebGtDefence;
+    public static boolean sandReplaceNonSolids;
+    public static boolean disableLeftShooting;
+    public static double leftShootingThreshold;
+    private static void Defences() {
+        fixSlimeBlockDefence = getBoolean("tnt.fix-slime-block-defence", false);
+        fixCobwebGtDefence = getBoolean("tnt.fix-cobweb-movement-defence", false);
+        sandReplaceNonSolids = getBoolean("sand.replace-non-solid-blocks", false);
+        disableLeftShooting = getBoolean("tnt.disable-left-shooting", false);
+        leftShootingThreshold = getDouble("tnt.left-shooting-threshold", 80.0);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/BlockSlime.java b/src/main/java/net/minecraft/server/BlockSlime.java
index 331bafa03..83da9eb38 100644
--- a/src/main/java/net/minecraft/server/BlockSlime.java
+++ b/src/main/java/net/minecraft/server/BlockSlime.java
@@ -18,7 +18,7 @@ public class BlockSlime extends BlockHalfTransparent {
     }
 
     public void a(World world, Entity entity) {
-        if (entity.isSneaking()) {
+        if (entity.isSneaking() || me.samsuik.blossom.configuration.BlossomConfig.fixSlimeBlockDefence && entity.isCannoningEntity) { // Blossom
             super.a(world, entity);
         } else if (entity.motY < 0.0D) {
             entity.motY = -entity.motY;
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 99de02eb4..87b12177d 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -698,7 +698,7 @@ public abstract class Entity implements ICommandListener {
         }
         // CraftBukkit end
 
-        if (this.H) {
+        if (this.H && (!me.samsuik.blossom.configuration.BlossomConfig.fixCobwebGtDefence || Math.pow(moveX, 2.0) + Math.pow(moveY, 2.0) + Math.pow(moveZ, 2.0) < 48.0 * 48.0)) { // Blossom
             this.H = false;
             moveX *= 0.25D;
             moveY *= 0.05000000074505806D;
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 7469d41ee..7c0239900 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -86,6 +86,21 @@ public class EntityFallingBlock extends Entity {
         }
     }
     // Blossom end - merge cannoning entities
+    // Blossom start - defence patches
+    private void preventLeftShooting() {
+        double changeX = Math.abs(this.motX) - Math.abs(this.lastMotX);
+        double changeZ = Math.abs(this.motZ) - Math.abs(this.lastMotZ);
+        double travelX = Math.abs(this.sourceLoc.getX() - this.locX);
+        double travelZ = Math.abs(this.sourceLoc.getZ() - this.locZ);
+
+        if (changeX > 0.0 && travelZ > me.samsuik.blossom.configuration.BlossomConfig.leftShootingThreshold) {
+            this.motX = 0.0;
+        }
+        if (changeZ > 0.0 && travelX > me.samsuik.blossom.configuration.BlossomConfig.leftShootingThreshold) {
+            this.motZ = 0.0;
+        }
+    }
+    // Blossom end - defence patches
 
     public void t_() {
         Block block = this.block.getBlock();
@@ -93,6 +108,11 @@ public class EntityFallingBlock extends Entity {
         if (block.getMaterial() == Material.AIR) {
             this.die();
         } else {
+            // Blossom start - defence patches
+            if (me.samsuik.blossom.configuration.BlossomConfig.disableLeftShooting && (this.motX != 0.0 || this.motZ != 0.0)) {
+                this.preventLeftShooting();
+            }
+            // Blossom end - defence patches
             this.lastX = this.locX;
             this.lastY = this.locY;
             this.lastZ = this.locZ;
@@ -141,7 +161,7 @@ public class EntityFallingBlock extends Entity {
                     if (this.world.getType(blockposition).getBlock() != Blocks.PISTON_EXTENSION) {
                         this.die();
                         if (!this.e) {
-                            if (this.world.a(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null) && !BlockFalling.canFall(this.world, blockposition.down()) /* mimic the false conditions of setTypeIdAndData */ && blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000 && blockposition.getY() >= 0 && blockposition.getY() < (this.world.tacoSpigotConfig.disableFallingBlockStackingAt256 ? 255 : 256) && this.world.getType(blockposition) != this.block) {
+                            if (this.world.isObstructed(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null, me.samsuik.blossom.configuration.BlossomConfig.sandReplaceNonSolids) && !BlockFalling.canFall(this.world, blockposition.down()) /* mimic the false conditions of setTypeIdAndData */ && blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000 && blockposition.getY() >= 0 && blockposition.getY() < (this.world.tacoSpigotConfig.disableFallingBlockStackingAt256 ? 255 : 256) && this.world.getType(blockposition) != this.block) { // Blossom
                                 if (CraftEventFactory.callEntityChangeBlockEvent(this, blockposition.getX(), blockposition.getY(), blockposition.getZ(), this.block.getBlock(), this.block.getBlock().toLegacyData(this.block)).isCancelled()) {
                                     return;
                                 }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 078d7e49e..eaff9be97 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -3288,11 +3288,16 @@ public abstract class World implements IBlockAccess {
     }
 
     public boolean a(Block block, BlockPosition blockposition, boolean flag, EnumDirection enumdirection, Entity entity, ItemStack itemstack) {
+        // Blossom start
+        return isObstructed(block, blockposition, flag, enumdirection, entity, itemstack, false);
+    }
+    public boolean isObstructed(Block block, BlockPosition blockposition, boolean flag, EnumDirection enumdirection, Entity entity, ItemStack itemstack, boolean replaceNotSolid) {
         Block block1 = this.getType(blockposition).getBlock();
         AxisAlignedBB axisalignedbb = flag ? null : block.a(this, blockposition, block.getBlockData());
 
         // CraftBukkit start - store default return
-        boolean defaultReturn = axisalignedbb != null && !this.a(axisalignedbb, entity) ? false : (block1.getMaterial() == Material.ORIENTABLE && block == Blocks.ANVIL ? true : block1.getMaterial().isReplaceable() && block.canPlace(this, blockposition, enumdirection, itemstack));
+        boolean defaultReturn = axisalignedbb != null && !this.a(axisalignedbb, entity) ? false : (block1.getMaterial() == Material.ORIENTABLE && block == Blocks.ANVIL ? true : (replaceNotSolid && !block1.getMaterial().isSolid() || block1.getMaterial().isReplaceable()) && block.canPlace(this, blockposition, enumdirection, itemstack));
+        // Blossom end
         BlockCanBuildEvent event = new BlockCanBuildEvent(this.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()), CraftMagicNumbers.getId(block), defaultReturn);
         this.getServer().getPluginManager().callEvent(event);
 
-- 
2.50.1

