From cdc3014e21bee2042ba62489779d60f21525ffb0 Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Mon, 19 Jun 2023 18:57:22 +0100
Subject: [PATCH] Defence Patches


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index 7376dd6d4..6063f75ba 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -362,4 +362,17 @@ public class BlossomConfig {
         extendedCollisionSearch = getBoolean("tnt.extended-collision-search", false);
     }
 
+    public static boolean fixSlimeBlockDefence;
+    public static boolean fixCobwebGtDefence;
+    public static boolean sandReplaceNonSolids;
+    public static boolean disableLeftShooting;
+    public static double leftShootingThreshold;
+    private static void Defences() {
+        fixSlimeBlockDefence = getBoolean("tnt.fix-slime-block-defence", false);
+        fixCobwebGtDefence = getBoolean("tnt.fix-cobweb-movement-defence", false);
+        sandReplaceNonSolids = getBoolean("sand.replace-non-solid-blocks", false);
+        disableLeftShooting = getBoolean("tnt.disable-left-shooting", false);
+        leftShootingThreshold = getDouble("tnt.left-shooting-threshold", 80.0);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/BlockSlime.java b/src/main/java/net/minecraft/server/BlockSlime.java
index 331bafa03..9b418ac91 100644
--- a/src/main/java/net/minecraft/server/BlockSlime.java
+++ b/src/main/java/net/minecraft/server/BlockSlime.java
@@ -20,7 +20,7 @@ public class BlockSlime extends BlockHalfTransparent {
     public void a(World world, Entity entity) {
         if (entity.isSneaking()) {
             super.a(world, entity);
-        } else if (entity.motY < 0.0D) {
+        } else if (entity.motY < 0.0D && (!me.samsuik.blossom.configuration.BlossomConfig.fixSlimeBlockDefence || Math.abs(entity.lastX - entity.locX) + Math.abs(entity.lastZ - entity.locZ) < 48.0)) { // Blossom
             entity.motY = -entity.motY;
         }
 
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 0baab1f19..55556b235 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -676,7 +676,7 @@ public abstract class Entity implements ICommandListener {
         }
         // CraftBukkit end
 
-        if (this.H) {
+        if (this.H && (!me.samsuik.blossom.configuration.BlossomConfig.fixCobwebGtDefence || Math.pow(moveX, 2.0) + Math.pow(moveY, 2.0) + Math.pow(moveZ, 2.0) < 48.0 * 48.0)) { // Blossom
             this.H = false;
             moveX *= 0.25D;
             moveY *= 0.05000000074505806D;
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 0adb22084..39bb76091 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -90,6 +90,21 @@ public class EntityFallingBlock extends Entity {
         super.move_cannon(d0, d1, d2);
     }
     // Blossom end
+    // Blossom start
+    public void preventLeftShooting() {
+        double changeX = Math.abs(motX) - Math.abs(lastMotX);
+        double changeZ = Math.abs(motZ) - Math.abs(lastMotZ);
+        double travelX = Math.abs(sourceLoc.getX() - locX);
+        double travelZ = Math.abs(sourceLoc.getZ() - locZ);
+
+        if (changeX > 0.0 && travelZ > me.samsuik.blossom.configuration.BlossomConfig.leftShootingThreshold) {
+            motX = 0.0;
+        }
+        if (changeZ > 0.0 && travelX > me.samsuik.blossom.configuration.BlossomConfig.leftShootingThreshold) {
+            motZ = 0.0;
+        }
+    }
+    // Blossom end
 
     public void t_() {
         Block block = this.block.getBlock();
@@ -102,6 +117,12 @@ public class EntityFallingBlock extends Entity {
             this.lastZ = this.locZ;
             BlockPosition blockposition;
 
+            // Blossom start
+            if (me.samsuik.blossom.configuration.BlossomConfig.disableLeftShooting && (motX != 0.0 || motZ != 0.0)) {
+                preventLeftShooting();
+            }
+            // Blossom end
+
             if (this.ticksLived++ == 0) {
                 blockposition = new BlockPosition(this);
                 if (this.world.getType(blockposition).getBlock() == block && !CraftEventFactory.callEntityChangeBlockEvent(this, blockposition.getX(), blockposition.getY(), blockposition.getZ(), Blocks.AIR, 0).isCancelled()) {
@@ -144,7 +165,7 @@ public class EntityFallingBlock extends Entity {
                     if (this.world.getType(blockposition).getBlock() != Blocks.PISTON_EXTENSION) {
                         this.die();
                         if (!this.e) {
-                            if (this.world.a(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null) && !BlockFalling.canFall(this.world, blockposition.down()) /* mimic the false conditions of setTypeIdAndData */ && blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000 && blockposition.getY() >= 0 && blockposition.getY() < (this.world.tacoSpigotConfig.disableFallingBlockStackingAt256 ? 255 : 256) && this.world.getType(blockposition) != this.block) {
+                            if (this.world.isObstructed(block, blockposition, true, EnumDirection.UP, (Entity) null, (ItemStack) null, me.samsuik.blossom.configuration.BlossomConfig.sandReplaceNonSolids) && !BlockFalling.canFall(this.world, blockposition.down()) /* mimic the false conditions of setTypeIdAndData */ && blockposition.getX() >= -30000000 && blockposition.getZ() >= -30000000 && blockposition.getX() < 30000000 && blockposition.getZ() < 30000000 && blockposition.getY() >= 0 && blockposition.getY() < (this.world.tacoSpigotConfig.disableFallingBlockStackingAt256 ? 255 : 256) && this.world.getType(blockposition) != this.block) { // Blossom
                                 if (CraftEventFactory.callEntityChangeBlockEvent(this, blockposition.getX(), blockposition.getY(), blockposition.getZ(), this.block.getBlock(), this.block.getBlock().toLegacyData(this.block)).isCancelled()) {
                                     return;
                                 }
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 2048e7e6b..361a3549f 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -3269,11 +3269,16 @@ public abstract class World implements IBlockAccess {
     }
 
     public boolean a(Block block, BlockPosition blockposition, boolean flag, EnumDirection enumdirection, Entity entity, ItemStack itemstack) {
+        // Blossom start
+        return isObstructed(block, blockposition, flag, enumdirection, entity, itemstack, false);
+    }
+    public boolean isObstructed(Block block, BlockPosition blockposition, boolean flag, EnumDirection enumdirection, Entity entity, ItemStack itemstack, boolean replaceNotSolid) {
         Block block1 = this.getType(blockposition).getBlock();
         AxisAlignedBB axisalignedbb = flag ? null : block.a(this, blockposition, block.getBlockData());
 
         // CraftBukkit start - store default return
-        boolean defaultReturn = axisalignedbb != null && !this.a(axisalignedbb, entity) ? false : (block1.getMaterial() == Material.ORIENTABLE && block == Blocks.ANVIL ? true : block1.getMaterial().isReplaceable() && block.canPlace(this, blockposition, enumdirection, itemstack));
+        boolean defaultReturn = axisalignedbb != null && !this.a(axisalignedbb, entity) ? false : (block1.getMaterial() == Material.ORIENTABLE && block == Blocks.ANVIL ? true : (replaceNotSolid && !block1.getMaterial().isSolid() || block1.getMaterial().isReplaceable()) && block.canPlace(this, blockposition, enumdirection, itemstack));
+        // Blossom end
         BlockCanBuildEvent event = new BlockCanBuildEvent(this.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()), CraftMagicNumbers.getId(block), defaultReturn);
         this.getServer().getPluginManager().callEvent(event);
 
-- 
2.40.0.windows.1

