From 1943a3b4673ad690f8d28aeb0f36e85064dac199 Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Mon, 10 Jul 2023 00:40:54 +0100
Subject: [PATCH] Configure Armour Damage Rate


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index aee71a90e..fea0e2fa9 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -451,4 +451,13 @@ public class BlossomConfig {
         altKBCalculation = getBoolean("player.knockback.alternate-knockback", false);
     }
 
+    public static double axeArmourDamage;
+    public static double swordArmourDamage;
+    public static double itemArmourDamage;
+    private static void ArmourDamage() {
+        axeArmourDamage = getDouble("player.armour.axe-damage-limit", 3.25);
+        swordArmourDamage = getDouble("player.armour.sword-damage-limit", 2.0);
+        itemArmourDamage = getDouble("player.armour.other-damage-limit", 1.0);
+    }
+    
 }
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 80de90003..518869f4e 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -1159,6 +1159,19 @@ public abstract class EntityLiving extends Entity {
             // Apply damage to armor
             if (!damagesource.ignoresArmor()) {
                 float armorDamage = (float) (event.getDamage() + event.getDamage(DamageModifier.BLOCKING) + event.getDamage(DamageModifier.HARD_HAT));
+                // Blossom start
+                float damageLimit = (float) me.samsuik.blossom.configuration.BlossomConfig.itemArmourDamage;
+                if (damagesource.getEntity() instanceof EntityLiving) {
+                    ItemStack used = ((EntityLiving) damagesource.getEntity()).getEquipment(0);
+
+                    if (used != null && used.getItem() instanceof ItemSword) {
+                        damageLimit = (float) me.samsuik.blossom.configuration.BlossomConfig.swordArmourDamage;
+                    } else if (used != null && used.getItem() instanceof ItemAxe) {
+                        damageLimit = (float) me.samsuik.blossom.configuration.BlossomConfig.axeArmourDamage;
+                    }
+                }
+                armorDamage = Math.min(armorDamage, damageLimit);
+                // Blossom end
                 this.damageArmor(armorDamage);
             }
 
-- 
2.40.0.windows.1

