From 05e91b9eafc64e06114486a2b4ad9cf03f7e162f Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Tue, 9 May 2023 20:30:08 +0100
Subject: [PATCH] Introduce Book Limits


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index ce9d37998..f4f1590dc 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -181,5 +181,18 @@ public class BlossomConfig {
             limits.put(key, ((Number) value).longValue());
         });
     }
+
+    public static boolean booksEnabled;
+    public static boolean bookParsing;
+    public static boolean bookChecking;
+    public static int bookPages;
+    public static int bookLength;
+    private static void Books() {
+        booksEnabled = getBoolean("books.enabled", true);
+        bookParsing = getBoolean("books.component-parsing", false);
+        bookChecking = getBoolean("books.character-checking", true);
+        bookLength = getInt("books.page-length", 400); // later versions require this to be around 800
+        bookPages = getInt("books.max-pages", 50); // later versions can support up to 100 pages, ouch
+    }
     
 }
diff --git a/src/main/java/net/minecraft/server/ItemBookAndQuill.java b/src/main/java/net/minecraft/server/ItemBookAndQuill.java
index a34550702..82f0b753c 100644
--- a/src/main/java/net/minecraft/server/ItemBookAndQuill.java
+++ b/src/main/java/net/minecraft/server/ItemBookAndQuill.java
@@ -13,6 +13,10 @@ public class ItemBookAndQuill extends Item {
     }
 
     public static boolean b(NBTTagCompound nbttagcompound) {
+        // Blossom - crack down on bad books
+        return b(nbttagcompound, false);
+    }
+    public static boolean b(NBTTagCompound nbttagcompound, boolean written) {
         if (nbttagcompound == null) {
             return false;
         } else if (!nbttagcompound.hasKeyOfType("pages", 9)) {
@@ -20,6 +24,10 @@ public class ItemBookAndQuill extends Item {
         } else {
             NBTTagList nbttaglist = nbttagcompound.getList("pages", 8);
 
+            if (nbttaglist.size() > me.samsuik.blossom.configuration.BlossomConfig.bookPages) {
+                return false;
+            }
+
             for (int i = 0; i < nbttaglist.size(); ++i) {
                 String s = nbttaglist.getString(i);
 
@@ -27,9 +35,14 @@ public class ItemBookAndQuill extends Item {
                     return false;
                 }
 
-                if (s.length() > 32767) {
+                if (s.length() > me.samsuik.blossom.configuration.BlossomConfig.bookLength) {
+                    return false;
+                }
+
+                if (me.samsuik.blossom.configuration.BlossomConfig.bookChecking && me.samsuik.blossom.utils.items.ComponentUtil.hasBadComponents(s, written)) {
                     return false;
                 }
+                // Blossom end
             }
 
             return true;
diff --git a/src/main/java/net/minecraft/server/ItemWrittenBook.java b/src/main/java/net/minecraft/server/ItemWrittenBook.java
index d17904972..b9bac52c2 100644
--- a/src/main/java/net/minecraft/server/ItemWrittenBook.java
+++ b/src/main/java/net/minecraft/server/ItemWrittenBook.java
@@ -7,7 +7,7 @@ public class ItemWrittenBook extends Item {
     }
 
     public static boolean b(NBTTagCompound nbttagcompound) {
-        if (!ItemBookAndQuill.b(nbttagcompound)) {
+        if (!ItemBookAndQuill.b(nbttagcompound, true)) { // Blossom
             return false;
         } else if (!nbttagcompound.hasKeyOfType("title", 8)) {
             return false;
@@ -46,7 +46,7 @@ public class ItemWrittenBook extends Item {
     }
 
     private void a(ItemStack itemstack, EntityHuman entityhuman) {
-        if (itemstack != null && itemstack.getTag() != null) {
+        if (itemstack != null && itemstack.getTag() != null && me.samsuik.blossom.configuration.BlossomConfig.bookParsing) { // Blossom - allow disabling book parsing
             NBTTagCompound nbttagcompound = itemstack.getTag();
 
             if (!nbttagcompound.getBoolean("resolved")) {
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 9ac2cca20..0afe5240c 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -2045,6 +2045,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
         try { // CraftBukkit
         if ("MC|BEdit".equals(packetplayincustompayload.a())) {
+            if (!me.samsuik.blossom.configuration.BlossomConfig.booksEnabled) return; // Blossom
             // Blossom start - item verification
             ItemStack heldItem = player.inventory.getItemInHand();
             if (heldItem != null && heldItem.getItem() != Items.WRITABLE_BOOK || lastInteractedSlot != player.inventory.itemInHandIndex) {
@@ -2083,6 +2084,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
             return;
         } else if ("MC|BSign".equals(packetplayincustompayload.a())) {
+            if (!me.samsuik.blossom.configuration.BlossomConfig.booksEnabled) return; // Blossom
             // Blossom start - item verification
             ItemStack heldItem = player.inventory.getItemInHand();
             if (heldItem != null && heldItem.getItem() != Items.WRITABLE_BOOK || lastInteractedSlot != player.inventory.itemInHandIndex) {
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
index 0b5ada011..4b7b3a8a5 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBook.java
@@ -33,8 +33,10 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
     static final ItemMetaKey BOOK_PAGES = new ItemMetaKey("pages");
     static final ItemMetaKey RESOLVED = new ItemMetaKey("resolved");
     static final ItemMetaKey GENERATION = new ItemMetaKey("generation");
-    static final int MAX_PAGE_LENGTH = Short.MAX_VALUE; // TODO: Check me
-    static final int MAX_TITLE_LENGTH = 0xffff;
+    // Blossom start
+    static final int MAX_PAGE_LENGTH = me.samsuik.blossom.configuration.BlossomConfig.bookLength; // TODO: Check me
+    static final int MAX_TITLE_LENGTH = 128;
+    // Blossom end
 
     protected String title;
     protected String author;
@@ -79,6 +81,11 @@ public class CraftMetaBook extends CraftMetaItem implements BookMeta {
 
         if (tag.hasKey(BOOK_PAGES.NBT) && handlePages) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
+            // Blossom start
+            if (pages.size() > me.samsuik.blossom.configuration.BlossomConfig.bookPages) {
+                return;
+            }
+            // Blossom end
 
             for (int i = 0; i < pages.size(); i++) {
                 String page = pages.getString(i);
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBookSigned.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBookSigned.java
index ae3341c4e..f90e66f6d 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBookSigned.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBookSigned.java
@@ -35,10 +35,15 @@ class CraftMetaBookSigned extends CraftMetaBook implements BookMeta {
 
         if (tag.hasKey(BOOK_PAGES.NBT)) {
             NBTTagList pages = tag.getList(BOOK_PAGES.NBT, 8);
+            // Blossom start
+            if (pages.size() > me.samsuik.blossom.configuration.BlossomConfig.bookPages) {
+                return;
+            }
+            // Blossom end
 
             for (int i = 0; i < pages.size(); i++) {
                 String page = pages.getString(i);
-                if (resolved) {
+                if (resolved || !me.samsuik.blossom.configuration.BlossomConfig.bookParsing) { // Blossom - allow disabling book parsing
                     try {
                         this.pages.add(ChatSerializer.a(page));
                         continue;
-- 
2.49.0

