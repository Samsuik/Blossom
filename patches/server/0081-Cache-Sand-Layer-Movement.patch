From f0010b1194b5dba0c7171307d7774cf99bb0d62c Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Tue, 4 Jul 2023 00:40:02 +0100
Subject: [PATCH] Cache Sand Layer Movement


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index d119302c5..d21f875c1 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -389,4 +389,9 @@ public class BlossomConfig {
         farmlandOnlyCheckWaterWhenUnused = getBoolean("crops.farmland-only-look-for-water-when-unused", false);
     }
 
+    public static boolean groupedSandMovement;
+    private static void SandLayerMovement() {
+        groupedSandMovement = getBoolean("sand.group-sand-layer-movement", false);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index aee4cec57..6599c0142 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -68,7 +68,7 @@ public abstract class Entity implements ICommandListener {
     public float pitch;
     public float lastYaw;
     public float lastPitch;
-    private AxisAlignedBB boundingBox;
+    protected AxisAlignedBB boundingBox; // Blossom
     public boolean onGround;
     public boolean positionChanged;
     public boolean E;
@@ -1166,7 +1166,7 @@ public abstract class Entity implements ICommandListener {
         }
     }
 
-    private void recalcPosition() {
+    protected void recalcPosition() { // Blossom - protected
         this.locX = (this.getBoundingBox().a + this.getBoundingBox().d) / 2.0D;
         this.locY = this.getBoundingBox().b;
         this.locZ = (this.getBoundingBox().c + this.getBoundingBox().f) / 2.0D;
@@ -2658,6 +2658,7 @@ public abstract class Entity implements ICommandListener {
         return new BlockPosition(this.locX, this.locY + 0.5D, this.locZ);
     }
 
+    public Vec3D position() { return d(); } // Blossom - OBFHELPER
     public Vec3D d() {
         return new Vec3D(this.locX, this.locY, this.locZ);
     }
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 7778d3b82..b60113deb 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -87,6 +87,7 @@ public class EntityFallingBlock extends Entity {
     // Blossom start
     @Override
     public void move(double d0, double d1, double d2) {
+        if (me.samsuik.blossom.configuration.BlossomConfig.groupedSandMovement && mimic()) return; // Blossom
         super.move_cannon(d0, d1, d2);
     }
     // Blossom end
@@ -105,6 +106,54 @@ public class EntityFallingBlock extends Entity {
         }
     }
     // Blossom end
+    // Blossom start
+    // Woah there, you're doing some special sand-specific movement caching? yup.
+    // This is a tad unsafe, don't worry my fellow not caring enjoyer, you will be appeased.
+    private Entity mimicSource = null;
+
+    public void group(Entity with) {
+        if (with instanceof EntityFallingBlock
+            && with.locY == locY && h(with) <= 48 * 48
+            && sameBlockBelow((EntityFallingBlock) with)
+        ) {
+            mimicSource = with; // ayaya
+        }
+    }
+
+    private boolean sameBlockBelow(EntityFallingBlock as) {
+        Tuple<Integer, IBlockData> self = below();
+        Tuple<Integer, IBlockData> comp = as.below();
+
+        return self != null && comp != null
+            && self.a().equals(comp.a())  // same y
+            && self.b().equals(comp.b()); // same type
+    }
+
+    private Tuple<Integer, IBlockData> below() {
+        for (int i = blockposition.getY() - 1; i > 0; i--) {
+            IBlockData type = world.getTypeIfLoaded(blockposition.getX(), i, blockposition.getZ());
+            if (type != null && (type.isShapeDynamic() || !type.shape().isEmpty())) {
+                return new Tuple<>(i, type);
+            }
+        }
+        return null;
+    }
+
+    public boolean mimic() {
+        if (mimicSource == null || motY != mimicSource.lastMotY || locY != mimicSource.lastY || mimicSource.dead) {
+            mimicSource = null;
+            return false;
+        } else if (motX == 0 && motZ == 0 && mimicSource.motX == 0 && mimicSource.motZ == 0) {
+            AxisAlignedBB ba = mimicSource.getBoundingBox();
+            AxisAlignedBB bb = getBoundingBox();
+            boundingBox = new AxisAlignedBB(bb.a, ba.b, bb.c, bb.d, ba.e, bb.f);
+            recalcPosition();
+            return true;
+        } else {
+            return false;
+        }
+    }
+    // Blossom end
 
     public void t_() {
         Block block = this.block.getBlock();
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index cbf7c7bcb..b2263873b 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -173,6 +173,7 @@ public abstract class World implements IBlockAccess {
     public me.samsuik.blossom.entity.MergeHistory mergeHistory;
     public Entity mergingEntity;
     // Blossom end
+    public EntityFallingBlock lastSandSpawn = null; // Blossom
 
     protected World(IDataManager idatamanager, WorldData worlddata, WorldProvider worldprovider, MethodProfiler methodprofiler, boolean flag, ChunkGenerator gen, org.bukkit.World.Environment env) {
         this.spigotConfig = new org.spigotmc.SpigotWorldConfig( worlddata.getName() ); // Spigot
@@ -1259,6 +1260,19 @@ public abstract class World implements IBlockAccess {
             entity.dead = true;
             return false;
         } else {
+            // Blossom start
+            if (entity instanceof EntityFallingBlock) {
+                EntityFallingBlock efb = (EntityFallingBlock) entity;
+
+                if (lastSandSpawn != null && lastSandSpawn.ticksLived == 0) {
+                    efb.group(lastSandSpawn);
+                }
+
+                lastSandSpawn = efb;
+            } else {
+                lastSandSpawn = null;
+            }
+            // Blossom end
             if (entity instanceof EntityHuman) {
                 EntityHuman entityhuman = (EntityHuman) entity;
 
-- 
2.40.0.windows.1

