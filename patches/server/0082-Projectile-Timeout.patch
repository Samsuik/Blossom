From b79f5f9a8856b1c1592bd642630c36cb1af57ccf Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Thu, 6 Jul 2023 23:04:57 +0100
Subject: [PATCH] Projectile Timeout


diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index bbc939263..a444cf540 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -393,4 +393,9 @@ public class BlossomConfig {
         farmlandOnlyCheckWaterWhenUnused = getBoolean("crops.farmland-only-look-for-water-when-unused", false);
     }
 
+    public static int projectileTimeout;
+    private static void ProjectileTimeout() {
+        projectileTimeout = getInt("projectiles.time-out", 1200);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index ff70a3591..5b5c9b1a1 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -130,6 +130,12 @@ public class EntityArrow extends Entity implements IProjectile {
     }
 
     public void t_() {
+        // Blossom start - projectile timeout
+        if (ticksLived > me.samsuik.blossom.configuration.BlossomConfig.projectileTimeout) {
+            die();
+            return;
+        }
+        // Blossom end
         super.t_();
         if (this.lastPitch == 0.0F && this.lastYaw == 0.0F) {
             float f = MathHelper.sqrt(this.motX * this.motX + this.motZ * this.motZ);
diff --git a/src/main/java/net/minecraft/server/EntityFireball.java b/src/main/java/net/minecraft/server/EntityFireball.java
index 125f74dfc..7076df012 100644
--- a/src/main/java/net/minecraft/server/EntityFireball.java
+++ b/src/main/java/net/minecraft/server/EntityFireball.java
@@ -64,6 +64,12 @@ public abstract class EntityFireball extends Entity {
     }
 
     public void t_() {
+        // Blossom start - projectile timeout
+        if (ticksLived > me.samsuik.blossom.configuration.BlossomConfig.projectileTimeout) {
+            die();
+            return;
+        }
+        // Blossom end
         if (!this.world.isClientSide && (this.shooter != null && this.shooter.dead || !this.world.isLoaded(new BlockPosition(this)))) {
             this.die();
         } else {
diff --git a/src/main/java/net/minecraft/server/EntityFishingHook.java b/src/main/java/net/minecraft/server/EntityFishingHook.java
index df6ce0dbb..12a8cd668 100644
--- a/src/main/java/net/minecraft/server/EntityFishingHook.java
+++ b/src/main/java/net/minecraft/server/EntityFishingHook.java
@@ -89,6 +89,12 @@ public class EntityFishingHook extends Entity {
     }
 
     public void t_() {
+        // Blossom start - projectile timeout
+        if (ticksLived > me.samsuik.blossom.configuration.BlossomConfig.projectileTimeout) {
+            die();
+            return;
+        }
+        // Blossom end
         super.t_();
         if (this.az > 0) {
             double d0 = this.locX + (this.aA - this.locX) / (double) this.az;
diff --git a/src/main/java/net/minecraft/server/EntityProjectile.java b/src/main/java/net/minecraft/server/EntityProjectile.java
index ad1bd8f59..0b36daf67 100644
--- a/src/main/java/net/minecraft/server/EntityProjectile.java
+++ b/src/main/java/net/minecraft/server/EntityProjectile.java
@@ -79,6 +79,12 @@ public abstract class EntityProjectile extends Entity implements IProjectile {
     }
 
     public void t_() {
+        // Blossom start - projectile timeout
+        if (ticksLived > me.samsuik.blossom.configuration.BlossomConfig.projectileTimeout) {
+            die();
+            return;
+        }
+        // Blossom end
         this.P = this.locX;
         this.Q = this.locY;
         this.R = this.locZ;
-- 
2.40.0.windows.1

