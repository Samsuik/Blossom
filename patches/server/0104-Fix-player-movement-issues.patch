From c10310a625fc2ec00afec29154f2b36c14d5f45d Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Tue, 18 Jul 2023 15:54:26 +0100
Subject: [PATCH] Fix player movement issues

Hard limit on top of spigots threshold is required.

If you stack enough momentum with methods such as knockback, explosions and jumping you can bypass the moved too quickly check and can make a teleport hack.

Vertical moved wrongly checks are broken.

Players can move inside blocks if they clip less than the moved wrongly threshold into another block.

Clients can clip up to 0.0625 inside a block causing moved wrongly check to fail.

TacoSpigots east west patch affects player movement causing a desync

diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index 15581efff..b69443147 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -529,4 +529,11 @@ public class BlossomConfig {
         delayChunkUnloads = getInt("chunk.chunk-unload-delay", 100);
     }
 
+    public static double hardMovementSpeedLimit;
+    public static boolean disallowSuspiciousMovements;
+    private static void PlayerMovement() {
+        hardMovementSpeedLimit = getDouble("player.hard-movement-speed-limit", 10.0);
+        disallowSuspiciousMovements = getBoolean("player.disallow-suspicious-movement", true);
+    }
+
 }
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 12dae07f0..a19ccafa0 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -622,7 +622,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                     double d15 = d11 * d11 + d12 * d12 + d13 * d13;
 
                     // Spigot: make "moved too quickly" limit configurable
-                    if (d15 - d14 > org.spigotmc.SpigotConfig.movedTooQuicklyThreshold && this.checkMovement && (!this.minecraftServer.T() || !this.minecraftServer.S().equals(this.player.getName()))) { // CraftBukkit - Added this.checkMovement condition to solve this check being triggered by teleports
+                    if ((d15 > Math.pow(me.samsuik.blossom.configuration.BlossomConfig.hardMovementSpeedLimit, 2) || d15 - d14 > org.spigotmc.SpigotConfig.movedTooQuicklyThreshold) && this.checkMovement && (!this.minecraftServer.T() || !this.minecraftServer.S().equals(this.player.getName()))) { // Blossom // CraftBukkit - Added this.checkMovement condition to solve this check being triggered by teleports
                         PlayerConnection.c.warn(this.player.getName() + " moved too quickly! " + d11 + "," + d12 + "," + d13 + " (" + d11 + ", " + d12 + ", " + d13 + ")");
                         this.a(this.o, this.p, this.q, this.player.yaw, this.player.pitch);
                         return;
@@ -635,22 +635,26 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                         this.player.bF();
                     }
 
+                    this.player.eastWestPatched = false; // Blossom - TacoSpigot bug
                     this.player.move(d11, d12, d13);
                     this.player.onGround = packetplayinflying.f();
                     double d16 = d12;
 
                     d11 = d7 - this.player.locX;
                     d12 = d8 - this.player.locY;
-                    if (d12 > -0.5D || d12 < 0.5D) {
-                        d12 = 0.0D;
-                    }
-
+                    // Blossom - previously vertical moved wrongly checks didn't work
                     d13 = d9 - this.player.locZ;
-                    d15 = d11 * d11 + d12 * d12 + d13 * d13;
+                    d15 = d11 * d11 + d13 * d13; // Blossom
                     boolean flag1 = false;
 
+                    // Blossom start
+                    if (me.samsuik.blossom.configuration.BlossomConfig.disallowSuspiciousMovements && (d15 + d12 * d12) > 1.0e-14) {
+                        flag1 = true;
+                    }
+                    // Blossom end
+
                     // Spigot: make "moved wrongly" limit configurable
-                    if (d15 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping() && !this.player.playerInteractManager.isCreative()) {
+                    if (d15 > org.spigotmc.SpigotConfig.movedWronglyThreshold && !this.player.isSleeping()) { // Blossom - treat creative players equally
                         flag1 = true;
                         PlayerConnection.c.warn(this.player.getName() + " moved wrongly!");
                     }
@@ -660,7 +664,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                     if (!this.player.noclip) {
                         boolean flag2 = worldserver.getCubes(this.player, this.player.getBoundingBox().shrink((double) f4, (double) f4, (double) f4)).isEmpty();
 
-                        if (flag && (flag1 || !flag2) && !this.player.isSleeping()) {
+                        if ((flag && !flag2 || flag1) && !this.player.isSleeping()) { // Blossom - always tp back when moving wrongly
                             this.a(this.o, this.p, this.q, f2, f3);
                             return;
                         }
-- 
2.50.1

