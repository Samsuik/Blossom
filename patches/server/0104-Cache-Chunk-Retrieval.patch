From caa27c90937a2faf4c22af07bd28127fb9c282e4 Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Sat, 15 Jul 2023 17:29:49 +0100
Subject: [PATCH] Cache Chunk Retrieval


diff --git a/src/main/java/me/samsuik/blossom/chunk/ServerChunkMap.java b/src/main/java/me/samsuik/blossom/chunk/ServerChunkMap.java
new file mode 100644
index 000000000..0199b35c8
--- /dev/null
+++ b/src/main/java/me/samsuik/blossom/chunk/ServerChunkMap.java
@@ -0,0 +1,30 @@
+package me.samsuik.blossom.chunk;
+
+import it.unimi.dsi.fastutil.HashCommon;
+import it.unimi.dsi.fastutil.longs.Long2ObjectOpenHashMap;
+import me.samsuik.blossom.configuration.BlossomConfig;
+import net.minecraft.server.Chunk;
+
+public class ServerChunkMap extends Long2ObjectOpenHashMap<Chunk> {
+
+    private final Chunk[] recentChunks;
+    private final int mask;
+
+    public ServerChunkMap(int expected, float factor) {
+        super(expected, factor);
+        int cache = BlossomConfig.chunkCacheSize;
+        int next = HashCommon.nextPowerOfTwo(cache);
+        this.recentChunks = new Chunk[next];
+        this.mask = next - 1;
+    }
+
+    @Override
+    public Chunk get(long k) {
+        int index = (int) (k & mask);
+        Chunk chunk = recentChunks[index];
+        if (chunk != null && chunk.chunkKey == k && chunk.isLoaded())
+            return chunk;
+        return recentChunks[index] = super.get(k);
+    }
+
+}
diff --git a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
index 0c98e37b9..d32a4e294 100644
--- a/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
+++ b/src/main/java/me/samsuik/blossom/configuration/BlossomConfig.java
@@ -500,5 +500,10 @@ public class BlossomConfig {
     private static void EnsureInteractedBlockIsVisible() {
         ensureInteractedBlockIsVisible = getBoolean("player.ensure-interacted-block-is-visible", true);
     }
+    
+    public static int chunkCacheSize;
+    private static void ChunkCacheSize() {
+        chunkCacheSize = getInt("chunk.chunk-cache-size", 8);
+    }
 
 }
diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index d10970073..5af16974b 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -152,6 +152,7 @@ public class Chunk {
         this.neighbors &= ~(0x1 << (x * 5 + 12 + z));
     }
     // CraftBukkit end
+    public final long chunkKey;
 
     public Chunk(World world, int i, int j) {
         this.sections = new ChunkSection[16];
@@ -165,6 +166,7 @@ public class Chunk {
         this.world = world;
         this.locX = i;
         this.locZ = j;
+        this.chunkKey = org.bukkit.craftbukkit.util.LongHash.toLong(i, j); // Blossom
         this.heightMap = new int[256];
 
         for (int k = 0; k < this.entitySlices.length; ++k) {
diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index f74937ef8..67c3a9fbb 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -39,7 +39,7 @@ public class ChunkProviderServer implements IChunkProvider {
     public IChunkProvider chunkProvider;
     private IChunkLoader chunkLoader;
     public boolean forceChunkLoad = false; // CraftBukkit - true -> false
-    public Long2ObjectMap<Chunk> chunks = new Long2ObjectOpenHashMap<Chunk>(4096, 0.5f); // TacoSpigot - use trove Long2ObjectOpenHashMap instead of craftbukkit implementation (using inital capacity and load factor chosen by Amaranth in an old impl)
+    public Long2ObjectMap<Chunk> chunks = new me.samsuik.blossom.chunk.ServerChunkMap(4096, 0.5f); // Blossom // TacoSpigot - use trove Long2ObjectOpenHashMap instead of craftbukkit implementation (using inital capacity and load factor chosen by Amaranth in an old impl)
     public WorldServer world;
 
     public ChunkProviderServer(WorldServer worldserver, IChunkLoader ichunkloader, IChunkProvider ichunkprovider) {
-- 
2.40.0.windows.1

