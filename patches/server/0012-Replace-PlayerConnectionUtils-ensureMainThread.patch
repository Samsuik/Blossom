From 27f0329fceb3809c617fa119d5c656f16b7cfc5c Mon Sep 17 00:00:00 2001
From: Samsuik <40902469+Samsuik@users.noreply.github.com>
Date: Fri, 1 Jul 2022 00:10:18 +0100
Subject: [PATCH] Replace PlayerConnectionUtils#ensureMainThread


diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 2aa3efcda..096f256bc 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -89,6 +89,23 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     private double q;
     private boolean checkMovement = true;
     private boolean processedDisconnect; // CraftBukkit - added
+    // Blossom start - don't throw exceptions to post to main thread
+    private <T extends PacketListener> boolean ensureMainThread(final Packet<T> packet) throws CancelledPacketHandleException {
+        IAsyncTaskHandler taskHandler = this.player.u();
+
+        if (taskHandler.isMainThread()) {
+            return false;
+        }
+
+        taskHandler.postToMainThread(() -> {
+            if (!processedDisconnect) {
+                packet.a((T) this);
+            }
+        });
+
+        return true;
+    }
+    // Blossom end
 
     public PlayerConnection(MinecraftServer minecraftserver, NetworkManager networkmanager, EntityPlayer entityplayer) {
         this.minecraftServer = minecraftserver;
@@ -194,7 +211,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInSteerVehicle packetplayinsteervehicle) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinsteervehicle, this, this.player.u());
+        if (ensureMainThread(packetplayinsteervehicle)) return; // Blossom
         this.player.a(packetplayinsteervehicle.a(), packetplayinsteervehicle.b(), packetplayinsteervehicle.c(), packetplayinsteervehicle.d());
     }
 
@@ -203,7 +220,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInFlying packetplayinflying) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinflying, this, this.player.u());
+        if (ensureMainThread(packetplayinflying)) return; // Blossom
         if (this.b(packetplayinflying)) {
             this.disconnect("Invalid move packet received");
         } else {
@@ -567,7 +584,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInBlockDig packetplayinblockdig) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinblockdig, this, this.player.u());
+        if (ensureMainThread(packetplayinblockdig)) return; // Blossom
         if (this.player.dead) return; // CraftBukkit
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         BlockPosition blockposition = packetplayinblockdig.a();
@@ -661,7 +678,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     private int packets = 0;
 
     public void a(PacketPlayInBlockPlace packetplayinblockplace) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinblockplace, this, this.player.u());
+        if (ensureMainThread(packetplayinblockplace)) return; // Blossom
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         boolean throttled = false;
         // PaperSpigot - Allow disabling the player interaction limiter
@@ -793,7 +810,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInSpectate packetplayinspectate) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinspectate, this, this.player.u());
+        if (ensureMainThread(packetplayinspectate)) return; // Blossom
         if (this.player.isSpectator()) {
             Entity entity = null;
             WorldServer[] aworldserver = this.minecraftServer.worldServer;
@@ -850,7 +867,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     // CraftBukkit start
     public void a(PacketPlayInResourcePackStatus packetplayinresourcepackstatus) {
         // TacoSpigot start
-        PlayerConnectionUtils.ensureMainThread(packetplayinresourcepackstatus, this, this.player.u());
+        if (ensureMainThread(packetplayinresourcepackstatus)) return; // Blossom
         PlayerResourcePackStatusEvent.Status status = PlayerResourcePackStatusEvent.Status.values()[packetplayinresourcepackstatus.b.ordinal()];
         this.getPlayer().setResourcePackStatus(status, packetplayinresourcepackstatus.a);
         this.server.getPluginManager().callEvent(new PlayerResourcePackStatusEvent(getPlayer(), status, packetplayinresourcepackstatus.a));
@@ -934,7 +951,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     public void a(PacketPlayInHeldItemSlot packetplayinhelditemslot) {
         // CraftBukkit start
         if (this.player.dead) return;
-        PlayerConnectionUtils.ensureMainThread(packetplayinhelditemslot, this, this.player.u());
+        if (ensureMainThread(packetplayinhelditemslot)) return; // Blossom
         if (packetplayinhelditemslot.a() >= 0 && packetplayinhelditemslot.a() < PlayerInventory.getHotbarSize()) {
             PlayerItemHeldEvent event = new PlayerItemHeldEvent(this.getPlayer(), this.player.inventory.itemInHandIndex, packetplayinhelditemslot.a());
             this.server.getPluginManager().callEvent(event);
@@ -956,7 +973,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
         // CraftBukkit start - async chat
         boolean isSync = packetplayinchat.a().startsWith("/");
         if (packetplayinchat.a().startsWith("/")) {
-            PlayerConnectionUtils.ensureMainThread(packetplayinchat, this, this.player.u());
+            if (ensureMainThread(packetplayinchat)) return; // Blossom
         }
         // CraftBukkit end
         if (this.player.dead || this.player.getChatFlags() == EntityHuman.EnumChatVisibility.HIDDEN) { // CraftBukkit - dead men tell no tales
@@ -1208,7 +1225,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInArmAnimation packetplayinarmanimation) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayinarmanimation, this, this.player.u());
+        if (ensureMainThread(packetplayinarmanimation)) return; // Blossom
         this.player.resetIdleTimer();
         // CraftBukkit start - Raytrace to look for 'rogue armswings'
         float f1 = this.player.pitch;
@@ -1242,7 +1259,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInEntityAction packetplayinentityaction) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinentityaction, this, this.player.u());
+        if (ensureMainThread(packetplayinentityaction)) return; // Blossom
         // CraftBukkit start
         if (this.player.dead) return;
         switch (packetplayinentityaction.b()) {
@@ -1309,7 +1326,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInUseEntity packetplayinuseentity) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayinuseentity, this, this.player.u());
+        if (ensureMainThread(packetplayinuseentity)) return; // Blossom
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         Entity entity = packetplayinuseentity.a((World) worldserver);
         // Spigot Start
@@ -1398,7 +1415,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInClientCommand packetplayinclientcommand) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinclientcommand, this, this.player.u());
+        if (ensureMainThread(packetplayinclientcommand)) return; // Blossom
         this.player.resetIdleTimer();
         PacketPlayInClientCommand.EnumClientCommand packetplayinclientcommand_enumclientcommand = packetplayinclientcommand.a();
 
@@ -1438,7 +1455,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInCloseWindow packetplayinclosewindow) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayinclosewindow, this, this.player.u());
+        if (ensureMainThread(packetplayinclosewindow)) return; // Blossom
 
         CraftEventFactory.handleInventoryCloseEvent(this.player); // CraftBukkit
 
@@ -1447,7 +1464,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInWindowClick packetplayinwindowclick) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayinwindowclick, this, this.player.u());
+        if (ensureMainThread(packetplayinwindowclick)) return; // Blossom
         this.player.resetIdleTimer();
         if (this.player.activeContainer.windowId == packetplayinwindowclick.a() && this.player.activeContainer.c(this.player)) {
             boolean cancelled = this.player.isSpectator(); // CraftBukkit - see below if
@@ -1762,7 +1779,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInEnchantItem packetplayinenchantitem) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinenchantitem, this, this.player.u());
+        if (ensureMainThread(packetplayinenchantitem)) return; // Blossom
         this.player.resetIdleTimer();
         if (this.player.activeContainer.windowId == packetplayinenchantitem.a() && this.player.activeContainer.c(this.player) && !this.player.isSpectator()) {
             this.player.activeContainer.a(this.player, packetplayinenchantitem.b());
@@ -1772,7 +1789,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInSetCreativeSlot packetplayinsetcreativeslot) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinsetcreativeslot, this, this.player.u());
+        if (ensureMainThread(packetplayinsetcreativeslot)) return; // Blossom
         if (this.player.playerInteractManager.isCreative()) {
             boolean flag = packetplayinsetcreativeslot.a() < 0;
             ItemStack itemstack = packetplayinsetcreativeslot.getItemStack();
@@ -1862,7 +1879,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInTransaction packetplayintransaction) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayintransaction, this, this.player.u());
+        if (ensureMainThread(packetplayintransaction)) return; // Blossom
         Short oshort = (Short) this.n.get(this.player.activeContainer.windowId);
 
         if (oshort != null && packetplayintransaction.b() == oshort.shortValue() && this.player.activeContainer.windowId == packetplayintransaction.a() && !this.player.activeContainer.c(this.player) && !this.player.isSpectator()) {
@@ -1873,7 +1890,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
 
     public void a(PacketPlayInUpdateSign packetplayinupdatesign) {
         if (this.player.dead) return; // CraftBukkit
-        PlayerConnectionUtils.ensureMainThread(packetplayinupdatesign, this, this.player.u());
+        if (ensureMainThread(packetplayinupdatesign)) return; // Blossom
         this.player.resetIdleTimer();
         WorldServer worldserver = this.minecraftServer.getWorldServer(this.player.dimension);
         BlockPosition blockposition = packetplayinupdatesign.a();
@@ -1934,7 +1951,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInAbilities packetplayinabilities) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinabilities, this, this.player.u());
+        if (ensureMainThread(packetplayinabilities)) return; // Blossom
         // CraftBukkit start
         if (this.player.abilities.canFly && this.player.abilities.isFlying != packetplayinabilities.isFlying()) {
             PlayerToggleFlightEvent event = new PlayerToggleFlightEvent(this.server.getPlayer(this.player), packetplayinabilities.isFlying());
@@ -1949,7 +1966,7 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInTabComplete packetplayintabcomplete) {
-        PlayerConnectionUtils.ensureMainThread(packetplayintabcomplete, this, this.player.u());
+        if (ensureMainThread(packetplayintabcomplete)) return; // Blossom
         // CraftBukkit start
         if (chatSpamField.addAndGet(this, 10) > 500 && !this.minecraftServer.getPlayerList().isOp(this.player.getProfile())) {
             this.disconnect("disconnect.spam");
@@ -1969,12 +1986,12 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
     }
 
     public void a(PacketPlayInSettings packetplayinsettings) {
-        PlayerConnectionUtils.ensureMainThread(packetplayinsettings, this, this.player.u());
+        if (ensureMainThread(packetplayinsettings)) return; // Blossom
         this.player.a(packetplayinsettings);
     }
 
     public void a(PacketPlayInCustomPayload packetplayincustompayload) {
-        PlayerConnectionUtils.ensureMainThread(packetplayincustompayload, this, this.player.u());
+        if (ensureMainThread(packetplayincustompayload)) return; // Blossom
         PacketDataSerializer packetdataserializer;
         ItemStack itemstack;
         ItemStack itemstack1;
-- 
2.40.0.windows.1

